{"ast":null,"code":"var _jsxFileName = \"/Users/tsaishengwei/Desktop/CAB432/Assignment2/CAB432A2/frontend/src/Components/UploadSuccess.jsx\";\nimport React from 'react';\nconst UploadSuccess = ({\n  relatedVideos\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-success-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, \"File Uploaded Successfully\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"Check the related YouTube videos below:\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"videoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, relatedVideos && relatedVideos.length > 0 ? relatedVideos.map((video, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 29\n    }\n  }, video.title), /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: `https://www.youtube.com/embed/${video.videoId}`,\n    frameBorder: \"0\",\n    allowFullScreen: true,\n    title: `${video.title} - Video ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, video.description))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"No related videos available.\")));\n};\nexport default UploadSuccess;","map":{"version":3,"names":["React","UploadSuccess","relatedVideos","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","length","map","video","index","key","title","width","height","src","videoId","frameBorder","allowFullScreen","description"],"sources":["/Users/tsaishengwei/Desktop/CAB432/Assignment2/CAB432A2/frontend/src/Components/UploadSuccess.jsx"],"sourcesContent":["import React from 'react';\n\nconst UploadSuccess = ({ relatedVideos }) => {\n    return (\n        <div className=\"upload-success-container\">\n            <h1>File Uploaded Successfully</h1>\n            <p>Check the related YouTube videos below:</p>\n            <div id=\"videoContainer\">\n                {relatedVideos && relatedVideos.length > 0 ? (\n                    relatedVideos.map((video, index) => (\n                        <div key={index}>\n                            <h3>{video.title}</h3>\n                            <iframe\n                                width=\"560\"\n                                height=\"315\"\n                                src={`https://www.youtube.com/embed/${video.videoId}`}\n                                frameBorder=\"0\"\n                                allowFullScreen\n                                title={`${video.title} - Video ${index + 1}`}\n                            ></iframe>\n                            <p>{video.description}</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No related videos available.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default UploadSuccess;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EACzC,oBACIF,KAAA,CAAAG,aAAA;IAAKC,SAAS,EAAC,0BAA0B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCV,KAAA,CAAAG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4BAA8B,CAAC,eACnCV,KAAA,CAAAG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,yCAA0C,CAAC,eAC9CV,KAAA,CAAAG,aAAA;IAAKQ,EAAE,EAAC,gBAAgB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnBR,aAAa,IAAIA,aAAa,CAACU,MAAM,GAAG,CAAC,GACtCV,aAAa,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3Bf,KAAA,CAAAG,aAAA;IAAKa,GAAG,EAAED,KAAM;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZV,KAAA,CAAAG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKI,KAAK,CAACG,KAAU,CAAC,eACtBjB,KAAA,CAAAG,aAAA;IACIe,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZC,GAAG,EAAE,iCAAiCN,KAAK,CAACO,OAAO,EAAG;IACtDC,WAAW,EAAC,GAAG;IACfC,eAAe;IACfN,KAAK,EAAE,GAAGH,KAAK,CAACG,KAAK,YAAYF,KAAK,GAAG,CAAC,EAAG;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxC,CAAC,eACVV,KAAA,CAAAG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAII,KAAK,CAACU,WAAe,CACxB,CACR,CAAC,gBAEFxB,KAAA,CAAAG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,8BAA+B,CAErC,CACJ,CAAC;AAEd,CAAC;AAED,eAAeT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}